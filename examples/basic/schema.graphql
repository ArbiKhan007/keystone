type User {
  id: ID
  name: String
  email: String
  avatar: LocalImageFieldOutput
  attachment: LocalFileFieldOutput
  password: PasswordState!
  isAdmin: Boolean
  roles: String
  phoneNumbers(
    where: PhoneNumberWhereInput! = {}
    orderBy: [SortPhoneNumbersBy!]! = []
    first: Int
    skip: Int! = 0
  ): [PhoneNumber!]!
  _phoneNumbersMeta(
    where: PhoneNumberWhereInput! = {}
    orderBy: [SortPhoneNumbersBy!]! = []
    first: Int
    skip: Int! = 0
  ): _QueryMeta
  posts(
    where: PostWhereInput! = {}
    orderBy: [SortPostsBy!]! = []
    first: Int
    skip: Int! = 0
  ): [Post!]!
  _postsMeta(
    where: PostWhereInput! = {}
    orderBy: [SortPostsBy!]! = []
    first: Int
    skip: Int! = 0
  ): _QueryMeta
  randomNumber: Float!
}

type LocalImageFieldOutput {
  id: ID!
  filesize: Int!
  height: Int!
  width: Int!
  extension: ImageExtension!
  ref: String!
  src: String!
}

enum ImageExtension {
  jpg
  png
  webp
  gif
}

type LocalFileFieldOutput {
  filename: String!
  filesize: Int!
  ref: String!
  src: String!
}

type PasswordState {
  isSet: Boolean!
}

type PhoneNumber {
  id: ID
  label: String
  user: User
  type: String
  value: String
}

input PhoneNumberWhereInput {
  AND: [PhoneNumberWhereInput!]
  OR: [PhoneNumberWhereInput!]
  NOT: [PhoneNumberWhereInput!]
}

input SortPhoneNumbersBy {
  id: OrderDirection
  type: OrderDirection
  value: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

type _QueryMeta {
  count: Int
}

type Post {
  id: ID
  title: String
  status: String
  content: Post_content_DocumentField
  author: User
}

type Post_content_DocumentField {
  document(hydrateRelationships: Boolean! = false): JSON!
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

input PostWhereInput {
  AND: [PostWhereInput!]
  OR: [PostWhereInput!]
  NOT: [PostWhereInput!]
}

input SortPostsBy {
  id: OrderDirection
  title: OrderDirection
  status: OrderDirection
}

input UserWhereUniqueInput {
  id: ID
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input SortUsersBy {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
  isAdmin: OrderDirection
  roles: OrderDirection
}

input PhoneNumberWhereUniqueInput {
  id: ID
}

input PostWhereUniqueInput {
  id: ID
}

type Mutation {
  createUser(data: UserCreateInput! = {}): User!
  createUsers(data: [UsersCreateInput!]! = []): [User!]!
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UsersUpdateInput!]!): User
  deleteUser(id: ID!): User
  deleteUsers(ids: [ID!]!): [User!]!
  createPhoneNumber(data: PhoneNumberCreateInput! = {}): PhoneNumber!
  createPhoneNumbers(data: [PhoneNumbersCreateInput!]! = []): [PhoneNumber!]!
  updatePhoneNumber(
    where: PhoneNumberWhereUniqueInput!
    data: PhoneNumberUpdateInput!
  ): PhoneNumber
  updatePhoneNumbers(data: [PhoneNumbersUpdateInput!]!): PhoneNumber
  deletePhoneNumber(id: ID!): PhoneNumber
  deletePhoneNumbers(ids: [ID!]!): [PhoneNumber!]!
  createPost(data: PostCreateInput! = {}): Post!
  createPosts(data: [PostsCreateInput!]! = []): [Post!]!
  updatePost(where: PostWhereUniqueInput!, data: PostUpdateInput!): Post
  updatePosts(data: [PostsUpdateInput!]!): Post
  deletePost(id: ID!): Post
  deletePosts(ids: [ID!]!): [Post!]!
}

input UserCreateInput {
  name: String
  email: String
  avatar: ImageFieldInput
  attachment: FileFieldInput
  password: String
  isAdmin: Boolean
  roles: String
}

input ImageFieldInput {
  upload: Upload
  ref: String
}

"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

input FileFieldInput {
  upload: Upload
  ref: String
}

input UsersCreateInput {
  data: UserCreateInput!
}

input UserUpdateInput {
  name: String
  email: String
  avatar: ImageFieldInput
  attachment: FileFieldInput
  password: String
  isAdmin: Boolean
  roles: String
}

input UsersUpdateInput {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input PhoneNumberCreateInput {
  type: String
  value: String
}

input PhoneNumbersCreateInput {
  data: PhoneNumberCreateInput!
}

input PhoneNumberUpdateInput {
  type: String
  value: String
}

input PhoneNumbersUpdateInput {
  where: PhoneNumberWhereUniqueInput!
  data: PhoneNumberUpdateInput!
}

input PostCreateInput {
  title: String
  status: String
  content: JSON
}

input PostsCreateInput {
  data: PostCreateInput!
}

input PostUpdateInput {
  title: String
  status: String
  content: JSON
}

input PostsUpdateInput {
  where: PostWhereUniqueInput!
  data: PostUpdateInput!
}

type Query {
  User(where: UserWhereUniqueInput!): User
  allUsers(
    where: UserWhereInput! = {}
    orderBy: [SortUsersBy!]! = []
    first: Int
    skip: Int! = 0
  ): [User!]!
  _allUsersMeta(
    where: UserWhereInput! = {}
    orderBy: [SortUsersBy!]! = []
    first: Int
    skip: Int! = 0
  ): _QueryMeta
  PhoneNumber(where: PhoneNumberWhereUniqueInput!): PhoneNumber
  allPhoneNumbers(
    where: PhoneNumberWhereInput! = {}
    orderBy: [SortPhoneNumbersBy!]! = []
    first: Int
    skip: Int! = 0
  ): [PhoneNumber!]!
  _allPhoneNumbersMeta(
    where: PhoneNumberWhereInput! = {}
    orderBy: [SortPhoneNumbersBy!]! = []
    first: Int
    skip: Int! = 0
  ): _QueryMeta
  Post(where: PostWhereUniqueInput!): Post
  allPosts(
    where: PostWhereInput! = {}
    orderBy: [SortPostsBy!]! = []
    first: Int
    skip: Int! = 0
  ): [Post!]!
  _allPostsMeta(
    where: PostWhereInput! = {}
    orderBy: [SortPostsBy!]! = []
    first: Int
    skip: Int! = 0
  ): _QueryMeta
  keystone: KeystoneMeta!
}

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  enableSignout: Boolean!
  enableSessionItem: Boolean!
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  isOrderable: Boolean!
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID!): KeystoneAdminUIFieldMetaItemView
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode!
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
